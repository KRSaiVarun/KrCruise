
KrCruise Booking Website Report
DATE: October 29, 2024
COURSE TITLE: Web Development
STUDENTâ€™S NAME: KR Sai Varun

HTML Structure
HTML Tags and Their Purposes:
<!DOCTYPE html>: Declares the document type and specifies that the document is HTML5.
<html lang="en">: The root element of the HTML document, indicating that the language is English.
<head>: Contains metadata and links to external resources such as stylesheets and scripts.
<meta charset="UTF-8">: Specifies the character encoding for the document as UTF-8, supporting a wide range of characters.
<meta name="viewport" content="width=device-width, initial-scale=1.0">: Ensures that the webpage is responsive, adapting to different screen sizes.
<title>KrCruise Booking</title>: Sets the title of the webpage, visible in the browser tab.
<body>: Contains the main content of the webpage.
<header>: Includes the logo and navigation menu for easy access to different sections.
<main>: Encloses the primary content sections, including the hero section, cruise destinations, booking form, and contact information.
<footer>: Contains copyright information and links for user support.
Key HTML Elements in the Body:
Header Section:

<div class="logo">: Displays the site logo.
<nav>: Navigation menu with links to Home, About, and Contact.
Main Content:

Hero Section:
<section class="hero">: Features a large welcoming image and message.
Cruise Destinations:
<div class="destination-card">: Cards displaying images, names, and descriptions of popular cruise destinations.
Booking Form:
<form id="booking-form">: Collects user input for destination selection and calculates total price.
Contact Section:
<div class="contact-info">: Provides contact details and an inquiry form.
CSS Styling
Inline Styles vs. Frameworks:
Inline Styles: Custom styles defined in the <style> tag within the <head>, tailored to specific needs.

body: General styles including font family, padding, and background color.
.hero: Styles for the hero section, including background image and text alignment.
.destination-card: Defines borders, padding, and layout for individual destination cards.
.booking-form: Styles the form elements for clarity and functionality.
Frameworks: No external frameworks like Bootstrap are used; all styles are custom-made to match the branding and aesthetics of the site.

Custom CSS Details:
Responsive Design: Media queries adjust layouts for various screen sizes, ensuring usability across devices.
.destination-card: Adjusts layout for smaller screens to maintain visual appeal.
JavaScript Functionality
Key Variables:
destinations: An array of destination objects, each containing properties like id, name, image, and price.
totalPrice: A variable to store the calculated total price based on user input.
bookingDetails: An object to hold user input data for booking confirmation.
Functions:
calculateTotal():

Computes the total price based on the selected destination and user location.
Updates the displayed total price on the booking form.
confirmBooking():

Validates user input and stores booking details in local storage.
Redirects users to a confirmation page upon successful booking.
displayDestinations():

Dynamically generates and displays destination cards based on the destinations array.
Attaches event listeners for user interaction.
Event Listeners:
Booking Form Submission: Triggers the calculateTotal function upon form submission.
Destination Selection: Updates the total price when a user selects a different destination.
User Interface Design
Design and Layout:
Header and Navigation: Clear and straightforward, featuring contrasting colors for visibility.
Hero Section: Engaging with a prominent image and centered welcome message.
Destinations Section: Visually appealing grid layout for easy comparison of cruise options.
Booking Form: User-friendly interface with clearly labeled form fields and buttons.
Contact Section: Provides essential contact information along with a user inquiry form.
Accessibility:
Color Contrast: Ensures readability through appropriate text and background color combinations.
Form Labels: Clearly defined to assist users in understanding input requirements.
Responsive Design: Adapts to different screen sizes, ensuring usability on various devices.
Conclusion
The KrCruise Booking website is effectively structured to provide a smooth user experience, combining HTML, CSS, and JavaScript for a functional and visually appealing platform for cruise trip exploration and booking. Future enhancements could include adding user reviews, account management features, and improved mobile responsiveness.

Recommendations
Additional Features: Consider integrating user reviews and ratings for destinations to enhance user engagement.
Enhanced Responsiveness: Conduct extensive testing and optimization for a broader range of devices and screen sizes.
Security Improvements: Implement HTTPS and secure data handling practices to safeguard user information.
References
HTML Documentation
CSS Documentation
JavaScript Documentation
Appendices
Code Snippets:
HTML Example:

html
Copy code
<section class="hero">
    <h1>Welcome to KrCruise!</h1>
    <p>Explore the world's best cruise destinations.</p>
</section>
CSS Example:

css
Copy code
.destination-card {
    border: 1px solid #ccc;
    padding: 20px;
    margin: 10px;
    transition: transform 0.2s;
}

.destination-card:hover {
    transform: scale(1.05);
}
JavaScript Example:

javascript
Copy code
function calculateTotal() {
    const basePrice = destinations[selectedDestination].price;
    totalPrice = basePrice + locationFee;
    document.getElementById('total-price').innerText = `Total: $${totalPrice}`;
}
Screenshots:
Visual Representation: Screenshots showcasing the website layout and design can be included to illustrate the overall aesthetic and functionality.
